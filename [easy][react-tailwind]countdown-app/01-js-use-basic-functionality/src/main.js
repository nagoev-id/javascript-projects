import './style.css';
import Toastify from 'toastify-js';
import 'toastify-js/src/toastify.css';

/**
 * Countdown App
 * 
 * –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç.
 * –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –∏ –¥–∞—Ç—É, –¥–æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –≤–µ—Å—Ç–∏ –æ—Ç—Å—á–µ—Ç.
 * –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –≤ –¥–Ω—è—Ö, —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏ —Å–µ–∫—É–Ω–¥–∞—Ö.
 * –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ localStorage –¥–ª—è persistance –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏.
 */

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @typedef {Object} AppConfig
 * @property {string} root - –°–µ–ª–µ–∫—Ç–æ—Ä –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @property {Object} selectors - –û–±—ä–µ–∫—Ç —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
 */
const APP_CONFIG = {
  root: '#app',
  selectors: {
    title: '[data-countdown-title]',
    config: '[data-countdown-config]',
    form: '[data-countdown-form]',
    date: '[data-countdown-date]',
    display: '[data-countdown-display]',
    days: '[data-countdown-days]',
    hours: '[data-countdown-hours]',
    minutes: '[data-countdown-minutes]',
    seconds: '[data-countdown-seconds]',
    reset: '[data-countdown-reset]',
    finish: '[data-countdown-finish]',
    finishText: '[data-countdown-finish-text]',
    finishBtn: '[data-countdown-finish-btn]',
  },
};

/**
 * –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @typedef {Object} AppState
 * @property {Object} elements - –û–±—ä–µ–∫—Ç —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã DOM
 * @property {string} today - –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
 * @property {number} countdownValue - –ó–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * @property {number} interval - ID –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
 * @property {string} countdownName - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 * @property {string} countdownDate - –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 */
const APP_STATE = {
  elements: {},
  today: new Date().toISOString().split('T')[0],
  countdownValue: null,
  interval: null,
  countdownName: null,
  countdownDate: null,
};

/**
 * –£—Ç–∏–ª–∏—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @typedef {Object} AppUtils
 * @property {Function} addLeadingZero - –î–æ–±–∞–≤–ª—è–µ—Ç –≤–µ–¥—É—â–∏–π –Ω–æ–ª—å –∫ —á–∏—Å–ª—É, –µ—Å–ª–∏ –æ–Ω–æ –º–µ–Ω—å—à–µ 10
 * @property {Function} capitalizeFirstLetter - –î–µ–ª–∞–µ—Ç –ø–µ—Ä–≤—É—é –±—É–∫–≤—É —Å—Ç—Ä–æ–∫–∏ –∑–∞–≥–ª–∞–≤–Ω–æ–π
 * @property {Function} renderDataAttributes - –£–¥–∞–ª—è–µ—Ç –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Å data-–∞—Ç—Ä–∏–±—É—Ç–æ–º
 * @property {Object} toastConfig - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Toastify
 * @property {Function} showToast - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é Toastify
 */
const APP_UTILS = {
  addLeadingZero: (num) => num.toString().padStart(2, '0'),
  capitalizeFirstLetter: (str) => str.charAt(0).toUpperCase() + str.slice(1),
  renderDataAttributes: (element) => element.slice(1, -1),
  toastConfig: {
    className: 'bg-none shadow-none bg-orange-100 text-black border border-orange-200',
    duration: 3000,
    gravity: 'bottom',
    position: 'center',
  },
  showToast: (message) => {
    Toastify({
      text: message,
      ...APP_UTILS.toastConfig,
    }).showToast();
  },
};

/**
 * –°–æ–∑–¥–∞–µ—Ç HTML-—Ä–∞–∑–º–µ—Ç–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
function createAppHTML() {
  const {
    root,
    selectors: {
      title,
      config,
      form,
      date,
      display,
      reset,
      finish,
      finishText,
      finishBtn,
    },
  } = APP_CONFIG;
  const { renderDataAttributes } = APP_UTILS;
  const rootElement = document.querySelector(root);

  if (!rootElement) return;

  rootElement.innerHTML = `
    <div class='max-w-md w-full rounded border bg-white p-3 shadow grid gap-4'>
      <h1 class='text-center text-2xl font-bold md:text-4xl' ${renderDataAttributes(title)}>Countdown</h1>
      <div ${renderDataAttributes(config)}>
        <form class='grid gap-3' ${renderDataAttributes(form)}>
          <label class='grid gap-1'>
            <span class='text-sm font-medium'>Name</span>
            <input
              class='w-full rounded border bg-slate-50 px-3 py-2 focus:border-blue-400 focus:outline-none'
              type='text'
              name='name'
              placeholder='What are you counting down to?'
            >
          </label>
          <label class='grid gap-1'>
            <span class='text-sm font-medium'>Date</span>
            <input
              class='w-full rounded border bg-slate-50 px-3 py-2 focus:border-blue-400 focus:outline-none'
              type='date'
              name='target'
              ${renderDataAttributes(date)}
            >
          </label>
          <button class='border px-3 py-2 hover:bg-slate-50' type='submit'>Submit</button>
        </form>
      </div>
      <div class='hidden grid gap-3' ${renderDataAttributes(display)}>
        <ul class='grid grid-cols-4 gap-2'>
          ${['days', 'hours', 'minutes', 'seconds'].map(
    (i) => `
            <li class='grid gap-1 place-items-center'>
              <p class='text-5xl font-bold' data-countdown-${i}>00</p>
              <p class='font-bold'>${APP_UTILS.capitalizeFirstLetter(i)}</p>
            </li>
          `,
  )
    .join('')}
        </ul>
        <button class='border px-3 py-2 hover:bg-slate-50' ${renderDataAttributes(reset)}>Reset</button>
      </div>
      <div class='hidden grid gap-3' ${renderDataAttributes(finish)}>
        <p class='text-center' ${renderDataAttributes(finishText)}></p>
        <button class='border px-3 py-2 hover:bg-slate-50' ${renderDataAttributes(finishBtn)}>New Countdown</button>
      </div>
    </div>
  `;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã DOM –≤ APP_STATE
 */
function initDOMElements() {
  APP_STATE.elements = Object.entries(APP_CONFIG.selectors).reduce((acc, [key, selector]) => {
    acc[key] = document.querySelector(selector);
    return acc;
  }, {});
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 */
function initApp() {
  createAppHTML();
  initDOMElements();
  displayLocalStorageData();
  APP_STATE.elements.date.setAttribute('min', APP_STATE.today);
  APP_STATE.elements.form.addEventListener('submit', handleFormSubmit);
  [APP_STATE.elements.reset, APP_STATE.elements.finishBtn].forEach((btn) =>
    btn.addEventListener('click', handleResetClick),
  );
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
 */
function displayLocalStorageData() {
  const { name, date } = JSON.parse(localStorage.getItem('countdown')) || {};
  if (name && date) {
    setCountdownDetails(name, date);
    updateCountdownUI();
    updateCountdown();
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 */
function updateCountdown() {
  const updateTimer = () => {
    const now = Date.now();
    const diff = APP_STATE.countdownValue - now;

    if (diff < 0) {
      clearInterval(APP_STATE.interval);
      finishCountdown();
    } else {
      updateCountdownDisplay(diff);
    }
  };

  updateCountdownUI();
  updateTimer();
  APP_STATE.interval = setInterval(updateTimer, 1000);
}

/**
 * –ó–∞–≤–µ—Ä—à–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á–µ—Ç
 */
function finishCountdown() {
  clearInterval(APP_STATE.interval);
  
  const { elements } = APP_STATE;
  elements.display.classList.add('hidden');
  elements.finish.classList.remove('hidden');
  elements.title.textContent = 'Countdown Complete üéä';
  elements.finishText.textContent = `${APP_STATE.countdownName} finished on ${APP_STATE.countdownDate}`;
  elements.form.reset();
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 * @param {number} diff - –†–∞–∑–Ω–∏—Ü–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 */
function updateCountdownDisplay(diff) {
  const MS_PER_SECOND = 1000;
  const MS_PER_MINUTE = MS_PER_SECOND * 60;
  const MS_PER_HOUR = MS_PER_MINUTE * 60;
  const MS_PER_DAY = MS_PER_HOUR * 24;

  const timeUnits = {
    days: Math.floor(diff / MS_PER_DAY),
    hours: Math.floor((diff % MS_PER_DAY) / MS_PER_HOUR),
    minutes: Math.floor((diff % MS_PER_HOUR) / MS_PER_MINUTE),
    seconds: Math.floor((diff % MS_PER_MINUTE) / MS_PER_SECOND),
  };

  Object.entries(timeUnits).forEach(([unit, value]) => {
    APP_STATE.elements[unit].textContent = APP_UTILS.addLeadingZero(value);
  });
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã
 * @param {Event} event - –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
 */
function handleFormSubmit(event) {
  event.preventDefault();
  const { name, target } = Object.fromEntries(new FormData(event.target));

  if (!name || !target) {
    APP_UTILS.showToast('Please fill the fields');
    return;
  }

  setCountdownDetails(name, target);
  localStorage.setItem('countdown', JSON.stringify({ name: APP_STATE.countdownName, date: APP_STATE.countdownDate }));
  updateCountdown();
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 * @param {string} name - –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 * @param {string} date - –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 */
function setCountdownDetails(name, date) {
  APP_STATE.countdownName = name;
  APP_STATE.countdownDate = date;
  APP_STATE.countdownValue = new Date(APP_STATE.countdownDate).getTime();
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
 */
function updateCountdownUI() {
  APP_STATE.elements.title.innerHTML = APP_STATE.countdownName;
  APP_STATE.elements.display.classList.remove('hidden');
  APP_STATE.elements.config.classList.add('hidden');
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–±—Ä–æ—Å–∞
 */
function handleResetClick() {
  clearInterval(APP_STATE.interval);
  resetUI();
  localStorage.clear();
}

/**
 * –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */
function resetUI() {
  const { elements } = APP_STATE;
  const { display, finish, config, title, form } = elements;

  [display, finish].forEach(el => el.classList.add('hidden'));
  config.classList.remove('hidden');
  title.textContent = 'Countdown';
  form.reset();
}

initApp();
